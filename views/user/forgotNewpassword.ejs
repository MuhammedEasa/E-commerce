<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Password</title>
    <style>
        @import "compass/css3";

body {
  background: #2A2B31;
  font: 16px 'Helvetica Neue', Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
}
.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh; 
}


.panel {
  background: #35363C;
  margin: 40px auto;
  width: 300px;
  border: 1px solid #46464C;
  border-radius: 3px;
  padding: 40px;
  box-shadow: 1px 3px #26272C;
}




.inputs__item {
  padding-bottom: 40px;
}

.inputs__label {
  color: #A64C41;
  display: block;
}

.inputs__input {
  border: none;
  border-bottom: 1px solid #6B6C70;
  background: #35363C;
  display: block;
  width: 100%;
  padding: 10px 0;
  font: 16px 'Helvetica Neue', Helvetica, sans-serif;
  color: #A64C41;
  
  &:focus {
    outline: none;
  }
}

.inputs__item--new {
  .inputs__label, 
  .inputs__input {
    color: #6498BB;
  }
}

.inputs__item--cta {
  text-align: center;
  padding-bottom: 0;
  padding-top: 20px;
}


.btn {
  border: none;
  background: #A64C41;
  color: #C8BDA0;
  font-size: 20px;
  border-radius: 3px;
  padding: 12px 50px;
  cursor: pointer;
}
@media (max-width: 768px) {
  .panel {
    width: 90%;
    margin: 0 auto;
  }

  .inputs__label, .inputs__input {
    font-size: 14px;
  }
}

    </style>
</head>
<body>
    <div class="container">
        
    <div class="panel">
    
        <form action="/forgotNewpassword" method="post" class="inputs">
          <div class="inputs__item">
            <label for="previous-password" class="inputs__label">New password</label>
            <input   type="password" id="newPassword" name="newPassword" class="inputs__input"    />
          </div>
          <div class="inputs__item inputs__item--new">
            <label for="new-password" class="inputs__label">Confirm password</label>
            <input type="password" class="inputs__input" id="new-password"  name="confirmPassword"  />
          </div>
          <div class="inputs__item inputs__item--cta">
            <input type="submit" class="btn" value="SUBMIT" />
          </div>
        </form>
      </div>
    
      </div>
      <script>
        document.addEventListener("DOMContentLoaded", function () {
          const form = document.querySelector(".inputs");
      
          form.addEventListener("submit", function (event) {
            const newPasswordInput = document.getElementById("newPassword");
            const confirmPasswordInput = document.getElementById("new-password");
      
            // Remove existing error messages
            removeErrorMessage(newPasswordInput);
            removeErrorMessage(confirmPasswordInput);
      
            if (!newPasswordInput.value.trim()) {
              event.preventDefault(); // Prevent form submission
              displayErrorMessage(newPasswordInput, "Please enter a Valid new password.");
            }
      
            if (!confirmPasswordInput.value.trim()) {
              event.preventDefault(); // Prevent form submission
              displayErrorMessage(confirmPasswordInput, "Please confirm your new password.");
            }
      
            if (newPasswordInput.value.trim() !== confirmPasswordInput.value.trim()) {
              event.preventDefault(); // Prevent form submission
              displayErrorMessage(confirmPasswordInput, "Passwords do not match.");
            }
          });
      
          function displayErrorMessage(inputElement, message) {
            // Display error message
            const errorMessage = document.createElement("p");
            errorMessage.textContent = message;
            errorMessage.style.color = "red";
            errorMessage.classList.add("error-message");
      
            // Insert error message after the input field
            inputElement.insertAdjacentElement("afterend", errorMessage);
          }
      
          function removeErrorMessage(inputElement) {
            // Remove existing error messages
            const existingErrorMessage = inputElement.nextElementSibling;
      
            if (existingErrorMessage && existingErrorMessage.classList.contains("error-message")) {
              existingErrorMessage.remove();
            }
          }
        });
      </script>
      
</body>
</html>